//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebJob.AppInsightsImporter.Engine.Properties {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("WebJob.AppInsightsImporter.Engine.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- old table
        ///IF OBJECT_ID (N&apos;hit_imports&apos;, N&apos;U&apos;) IS NOT NULL 
        ///drop table [hit_imports]
        ///
        ///
        ///IF OBJECT_ID (N&apos;${STAGING_TABLE_HIT_IMPORTS}&apos;, N&apos;U&apos;) IS NOT NULL 
        ///drop table [${STAGING_TABLE_HIT_IMPORTS}]
        ///
        ///CREATE TABLE [dbo].[${STAGING_TABLE_HIT_IMPORTS}](
        ///	[id] [int] IDENTITY(1,1) NOT NULL primary key,
        ///	[url] [nvarchar](max) NOT NULL,
        ///	[hit_timestamp] [datetime] NOT NULL,
        ///	[title] [nvarchar](250) NOT NULL,
        ///	[user_name] [varchar](250) NOT NULL,
        ///	[web_url] [nvarchar](500) NULL,
        ///	[web_title] [nvarcha [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_Import_Temp_Table {
            get {
                return ResourceManager.GetString("Create_Import_Temp_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///IF OBJECT_ID (N&apos;${STAGING_TABLE_SEARCHES}&apos;, N&apos;U&apos;) IS NOT NULL 
        ///drop table [${STAGING_TABLE_SEARCHES}]
        ///
        ///CREATE TABLE [dbo].[${STAGING_TABLE_SEARCHES}](
        ///	[id] [int] IDENTITY(1,1) NOT NULL primary key,
        ///	[ai_session_id] [varchar](50) NOT NULL,
        ///	[user_name] [varchar](250) NOT NULL,
        ///	[search_term] [nvarchar](250) NOT NULL,
        ///	[date_time] datetime NULL
        ///	);
        ///
        ///-- Change collation to case-sensitive if needed
        ///ALTER TABLE [${STAGING_TABLE_SEARCHES}] ALTER COLUMN ai_session_id varchar(50) COLLATE SQL_Latin1_G [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Create_Searches_Import_Temp_Table {
            get {
                return ResourceManager.GetString("Create_Searches_Import_Temp_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///IF OBJECT_ID (N&apos;${STAGING_TABLE_UPDATES}&apos;, N&apos;U&apos;) IS NOT NULL 
        ///drop table [${STAGING_TABLE_UPDATES}]
        ///
        ///CREATE TABLE [dbo].[${STAGING_TABLE_UPDATES}](
        ///	[id] [int] IDENTITY(1,1) NOT NULL primary key,
        ///	[page_request_id] [uniqueidentifier] NOT NULL,
        ///	[seconds_on_page] [float] NULL
        ///	);
        ///.
        /// </summary>
        internal static string Create_Update_Temp_Table {
            get {
                return ResourceManager.GetString("Create_Update_Temp_Table", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- Delete duplicates
        ///
        ///	SET QUOTED_IDENTIFIER ON
        ///
        ///	DECLARE @allHitsCursor as CURSOR;
        ///
        ///	DECLARE @id as int;
        ///	DECLARE @page_request_id as uniqueidentifier;
        ///	DECLARE @lastPage_request_id as uniqueidentifier;
        ///	DECLARE @duplicateCount as int;
        ///	declare @rowCount as int
        ///	set @rowCount= 0
        ///
        ///	SET @allHitsCursor = CURSOR FOR
        ///		SELECT
        ///		y.id, y.page_request_id, dt.CountOf
        ///		FROM hits y
        ///			INNER JOIN (SELECT
        ///							page_request_id, COUNT(*) AS CountOf
        ///							FROM hits
        ///							GROUP BY page_request_id [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Delete_Duplicate_Hits_and_Create_ReqID_IDX {
            get {
                return ResourceManager.GetString("Delete_Duplicate_Hits_and_Create_ReqID_IDX", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  
        ///-- Insert missing lookups
        ///
        ///-- Most things are optional, except link title
        ///INSERT INTO hits_clicked_element_class_names(class_names)
        ///	SELECT distinct imports.class_names 
        ///	FROM ${STAGING_TABLE_CLICKS} imports
        ///	left join hits_clicked_element_class_names on hits_clicked_element_class_names.class_names = imports.class_names
        ///	where imports.class_names is not null and hits_clicked_element_class_names.class_names is null;
        ///
        ///INSERT INTO urls(full_url)
        ///	SELECT distinct imports.url 
        ///	FROM ${STAGING_TABLE [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Migrate_clicks_from_staging {
            get {
                return ResourceManager.GetString("Migrate_clicks_from_staging", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- Insert missing lookups
        ///INSERT INTO urls (full_url)
        ///	SELECT distinct [url]
        ///	FROM [${STAGING_TABLE_HIT_IMPORTS}] imports
        ///	left join urls on urls.full_url = imports.url
        ///	where full_url is null;
        ///
        ///INSERT INTO page_titles (title)
        ///	SELECT distinct imports.title 
        ///	FROM [${STAGING_TABLE_HIT_IMPORTS}] imports
        ///	left join page_titles on page_titles.title = imports.title
        ///	where page_titles.title is null and imports.title is not null;
        ///
        ///INSERT INTO users(user_name)
        ///	SELECT distinct imports.user_name 
        ///	 [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Migrate_Hits_Import_into_Hits {
            get {
                return ResourceManager.GetString("Migrate_Hits_Import_into_Hits", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- Insert without parent links yet
        ///insert into page_comments(comment, language_id, user_id, sp_id, created, url_id, sentiment_score)
        ///SELECT [comment]
        ///      ,[language_id]
        ///      ,[user_id]
        ///      ,[sp_id]
        ///      ,[created]
        ///      ,[url_id]
        ///      ,[sentiment_score]
        ///  FROM [${STAGING_TABLE_COMMENTS}]
        ///
        ///-- Find comments without a parent set, but that the temp table has a parent for
        ///DECLARE comments_to_update_cursor CURSOR  
        ///    FOR 
        ///		select originalComments.id, ${STAGING_TABLE_COMMENTS}.ParentComme [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Migrate_New_Comments {
            get {
                return ResourceManager.GetString("Migrate_New_Comments", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///-- Insert missing search terms
        ///INSERT INTO search_terms(search_term)
        ///	SELECT distinct imports.search_term 
        ///	FROM ${STAGING_TABLE_SEARCHES} imports
        ///	left join search_terms on search_terms.search_term = imports.search_term
        ///	where search_terms.search_term is null;
        ///
        ///--sp_updatestats
        ///
        ///-- Insert searches from staging
        ///insert into searches (
        ///		session_id, 
        ///		search_term_id,
        ///		date_time
        ///	)
        ///	select  
        ///		[sessions].id as sessionId, 
        ///		search_terms.id as searchTermId,
        ///		imports.date_time
        ///	FROM ${STA [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Migrate_Searches_Import {
            get {
                return ResourceManager.GetString("Migrate_Searches_Import", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to 
        ///DECLARE @HitUpdatesCursor as CURSOR;
        ///
        ///DECLARE @page_request_id as uniqueidentifier
        ///DECLARE @seconds_on_page as float;
        ///
        ///SET @HitUpdatesCursor = CURSOR FOR
        ///	select 
        ///		updates.[page_request_id],
        ///		updates.seconds_on_page
        ///	from ${STAGING_TABLE_UPDATES} updates
        ///
        ///	open @HitUpdatesCursor
        ///
        ///	FETCH NEXT FROM @HitUpdatesCursor INTO 
        ///		@page_request_id, 
        ///		@seconds_on_page;
        ///
        ///
        ///	WHILE @@FETCH_STATUS = 0
        ///BEGIN
        ///
        ///	--print &apos;Updating &apos; + convert(varchar(250), @page_request_id)
        ///
        ///	update hits 
        ///		set se [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Update_Hits_From_Staging {
            get {
                return ResourceManager.GetString("Update_Hits_From_Staging", resourceCulture);
            }
        }
    }
}
